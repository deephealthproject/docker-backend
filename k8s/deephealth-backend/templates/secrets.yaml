{{- if or .Release.IsInstall (and .Release.IsUpgrade .Values.backend.admin.password) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "deephealth-backend.django.secretName" . }}
  labels:
    app.kubernetes.io/name: {{ include "deephealth-backend.name" . }}-backend
    app.kubernetes.io/part-of: {{ include "deephealth-backend.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: api-backend-secrets
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
  annotations:
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
    helm.sh/resource-policy: keep
type: Opaque
stringData:
  adminUsername: {{ .Values.backend.admin.username }}
  adminPassword: {{ include "deephealth-backend.admin.password" . | quote }}
  {{- if .Values.backend.admin.email }}
  adminEmail: {{ .Values.backend.admin.email }}
  {{- end }}
  config: |-
    # Allow DEBUG mode. Don't run with debug turned on in production!
    DEBUG={{ .Values.global.debug }}

    # Enable eddl CS_GPU computing service
    EDDL_WITH_CUDA={{ include "deephealth-backend.gpu-enabled" . }}

    # Set SECRET_KEY. Keep the secret key used in production secret!
    SECRET_KEY={{ include "deephealth-backend.djangoSecretKey" . }}

    # List of allowed hosts
    ALLOWED_HOSTS="localhost,127.0.0.1,{{- range .Values.ingress.hosts }},{{ .host }}{{- end }}{{- if .Values.backend.allowedHosts }},{{ .Values.backend.allowedHosts }}{{- end }}"

    # Cross-Origin Resource Sharing (CORS) whitelist
    CORS_ORIGIN_WHITELIST="{{- range .Values.ingress.hosts }},http://{{ .host }},https://{{ .host }}{{- end }}{{- if .Values.backend.corsOriginWhiteList }},{{ .Values.backend.corsOriginWhiteList }}{{- end }}"

    # Database connection settings
    # DATABASE_URL=sqlite:///my-local-sqlite.db # SQLite DB
    # DATABASE_URL=psql://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ include "deephealth-backend.fullname" . }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.postgresqlDatabase }}

    # Relative path for static resources
    STATIC_URL={{ include "deephealth-backend.static_files.url" . }}

    # Relative path for media resources
    MEDIA_URL={{ include "deephealth-backend.media_files.url" . }}

    # Data directories
    DATA_DIR={{ .Values.backend.persistence.data.path }}

    # RabbitMQ Credentials
    # see https://hub.docker.com/_/rabbitmq
    # RABBITMQ_BROKER_URL=amqp://{{ .Values.broker.rabbitmq.username }}:{{ .Values.broker.rabbitmq.password }}@{{ include "deephealth-backend.fullname" . }}-rabbitmq:{{ .Values.broker.service.port }}

    # Celery settings
    CELERY_ACCEPT_CONTENT={{ .Values.celery.acceptContent | quote }}
    # CELERY_RESULT_BACKEND=db+sqlite:///results.sqlite
    CELERY_TASK_SERIALIZER={{ .Values.celery.taskSerializer | quote }}

    # OAuth settings
    DRFSO2_PROPRIETARY_BACKEND_NAME='GithubOAuth2'
    DRFSO2_URL_NAMESPACE='social'

    # GitHub configuration
    SOCIAL_AUTH_GITHUB_KEY={{ .Values.backend.social_auth.github.client_id | quote }}
    SOCIAL_AUTH_GITHUB_SECRET={{ .Values.backend.social_auth.github.client_secret | quote }}

    # Email backend settings
    EMAIL_HOST_USER={{ .Values.backend.email.user | quote }}
    EMAIL_HOST_PASSWORD={{ .Values.backend.email.password | quote }}
---
{{- end }}
{{- if or .Release.IsInstall (and .Release.IsUpgrade (or .Values.postgresql.postgresqlPassword .Values.postgresql.postgresqlPostgresPassword)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "deephealth-backend.postgresql.secretName" . }}
  labels:
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
    app.kubernetes.io/name: {{ include "deephealth-backend.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
    helm.sh/resource-policy: keep
type: Opaque
data:
  postgresql-postgres-password: {{ include "deephealth-backend.postgresql.postgres-password" . | b64enc | quote }}
  postgresql-password: {{ include "deephealth-backend.postgresql.password" . | b64enc | quote }}
  {{- if .Values.postgresql.replication.enabled }}
  postgresql-replication-password: {{ include "deephealth-backend.postgresql.replication.password" . | b64enc | quote }}
  {{- end }}
  {{- if (and .Values.postgresql.ldap.enabled .Values.postgresql.ldap.bind_password)}}
  postgresql-ldap-password: {{ .Values.postgresql.ldap.bind_password | b64enc | quote }}
  {{- end }}
---
{{- end }}
{{- if or .Release.IsInstall (and .Release.IsUpgrade .Values.rabbitmq.rabbitmq.password) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "deephealth-backend.rabbitmq.secretName" . }}
  labels:
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
    app.kubernetes.io/name: {{ include "deephealth-backend.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
    helm.sh/resource-policy: keep
type: Opaque
data:
  {{ if .Values.rabbitmq.rabbitmq.password }}
  rabbitmq-password: {{ .Values.rabbitmq.rabbitmq.password | b64enc | quote }}
  {{ else }}
  rabbitmq-password: {{ randAlphaNum 10 | b64enc | quote }}
  {{ end }}
  {{ if .Values.rabbitmq.rabbitmq.erlangCookie }}
  rabbitmq-erlang-cookie: {{ .Values.rabbitmq.rabbitmq.erlangCookie | b64enc | quote }}
  {{ else }}
  rabbitmq-erlang-cookie: {{ randAlphaNum 32 | b64enc | quote }}
  {{ end }}
{{- end }}
